"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Copyright 2018 The Feast Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import collections.abc
import feast.types.Value_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FieldStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FieldStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FieldStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INVALID: _FieldStatus.ValueType  # 0
    """Status is unset for this field."""
    PRESENT: _FieldStatus.ValueType  # 1
    """Field value is present for this field and age is within max age."""
    NULL_VALUE: _FieldStatus.ValueType  # 2
    """Values could be found for entity key and age is within max age, but
    this field value is not assigned a value on ingestion into feast.
    """
    NOT_FOUND: _FieldStatus.ValueType  # 3
    """Entity key did not return any values as they do not exist in Feast.
    This could suggest that the feature values have not yet been ingested
    into feast or the ingestion failed.
    """
    OUTSIDE_MAX_AGE: _FieldStatus.ValueType  # 4
    """Values could be found for entity key, but field values are outside the maximum
    allowable range.
    """

class FieldStatus(_FieldStatus, metaclass=_FieldStatusEnumTypeWrapper): ...

INVALID: FieldStatus.ValueType  # 0
"""Status is unset for this field."""
PRESENT: FieldStatus.ValueType  # 1
"""Field value is present for this field and age is within max age."""
NULL_VALUE: FieldStatus.ValueType  # 2
"""Values could be found for entity key and age is within max age, but
this field value is not assigned a value on ingestion into feast.
"""
NOT_FOUND: FieldStatus.ValueType  # 3
"""Entity key did not return any values as they do not exist in Feast.
This could suggest that the feature values have not yet been ingested
into feast or the ingestion failed.
"""
OUTSIDE_MAX_AGE: FieldStatus.ValueType  # 4
"""Values could be found for entity key, but field values are outside the maximum
allowable range.
"""
global___FieldStatus = FieldStatus

@typing.final
class GetFeastServingInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetFeastServingInfoRequest = GetFeastServingInfoRequest

@typing.final
class GetFeastServingInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    version: builtins.str
    """Feast version of this serving deployment."""
    def __init__(
        self,
        *,
        version: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["version", b"version"]) -> None: ...

global___GetFeastServingInfoResponse = GetFeastServingInfoResponse

@typing.final
class GetVersionInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetVersionInfoRequest = GetVersionInfoRequest

@typing.final
class GetVersionInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    BUILD_TIME_FIELD_NUMBER: builtins.int
    COMMIT_HASH_FIELD_NUMBER: builtins.int
    GO_VERSION_FIELD_NUMBER: builtins.int
    SERVER_TYPE_FIELD_NUMBER: builtins.int
    version: builtins.str
    build_time: builtins.str
    commit_hash: builtins.str
    go_version: builtins.str
    server_type: builtins.str
    def __init__(
        self,
        *,
        version: builtins.str = ...,
        build_time: builtins.str = ...,
        commit_hash: builtins.str = ...,
        go_version: builtins.str = ...,
        server_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["build_time", b"build_time", "commit_hash", b"commit_hash", "go_version", b"go_version", "server_type", b"server_type", "version", b"version"]) -> None: ...

global___GetVersionInfoResponse = GetVersionInfoResponse

@typing.final
class FeatureReferenceV2(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FEATURE_VIEW_NAME_FIELD_NUMBER: builtins.int
    FEATURE_NAME_FIELD_NUMBER: builtins.int
    feature_view_name: builtins.str
    """Name of the Feature View to retrieve the feature from."""
    feature_name: builtins.str
    """Name of the Feature to retrieve the feature from."""
    def __init__(
        self,
        *,
        feature_view_name: builtins.str = ...,
        feature_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["feature_name", b"feature_name", "feature_view_name", b"feature_view_name"]) -> None: ...

global___FeatureReferenceV2 = FeatureReferenceV2

@typing.final
class GetOnlineFeaturesRequestV2(google.protobuf.message.Message):
    """ToDo (oleksii): remove this message (since it's not used) and move EntityRow on package level"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class EntityRow(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class FieldsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.str
            @property
            def value(self) -> feast.types.Value_pb2.Value: ...
            def __init__(
                self,
                *,
                key: builtins.str = ...,
                value: feast.types.Value_pb2.Value | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

        TIMESTAMP_FIELD_NUMBER: builtins.int
        FIELDS_FIELD_NUMBER: builtins.int
        @property
        def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Request timestamp of this row. This value will be used,
            together with maxAge, to determine feature staleness.
            """

        @property
        def fields(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, feast.types.Value_pb2.Value]:
            """Map containing mapping of entity name to entity value."""

        def __init__(
            self,
            *,
            timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            fields: collections.abc.Mapping[builtins.str, feast.types.Value_pb2.Value] | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["timestamp", b"timestamp"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["fields", b"fields", "timestamp", b"timestamp"]) -> None: ...

    FEATURES_FIELD_NUMBER: builtins.int
    ENTITY_ROWS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    project: builtins.str
    """Optional field to specify project name override. If specified, uses the
    given project for retrieval. Overrides the projects specified in
    Feature References if both are specified.
    """
    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FeatureReferenceV2]:
        """List of features that are being retrieved"""

    @property
    def entity_rows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GetOnlineFeaturesRequestV2.EntityRow]:
        """List of entity rows, containing entity id and timestamp data.
        Used during retrieval of feature rows and for joining feature
        rows into a final dataset
        """

    def __init__(
        self,
        *,
        features: collections.abc.Iterable[global___FeatureReferenceV2] | None = ...,
        entity_rows: collections.abc.Iterable[global___GetOnlineFeaturesRequestV2.EntityRow] | None = ...,
        project: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["entity_rows", b"entity_rows", "features", b"features", "project", b"project"]) -> None: ...

global___GetOnlineFeaturesRequestV2 = GetOnlineFeaturesRequestV2

@typing.final
class FeatureList(google.protobuf.message.Message):
    """In JSON "val" field can be omitted"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VAL_FIELD_NUMBER: builtins.int
    @property
    def val(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        val: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["val", b"val"]) -> None: ...

global___FeatureList = FeatureList

@typing.final
class GetOnlineFeaturesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class EntitiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> feast.types.Value_pb2.RepeatedValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: feast.types.Value_pb2.RepeatedValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class RequestContextEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> feast.types.Value_pb2.RepeatedValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: feast.types.Value_pb2.RepeatedValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    FEATURE_SERVICE_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    ENTITIES_FIELD_NUMBER: builtins.int
    FULL_FEATURE_NAMES_FIELD_NUMBER: builtins.int
    REQUEST_CONTEXT_FIELD_NUMBER: builtins.int
    INCLUDE_METADATA_FIELD_NUMBER: builtins.int
    feature_service: builtins.str
    full_feature_names: builtins.bool
    include_metadata: builtins.bool
    """Whether to include the timestamp/status metadata in the response"""
    @property
    def features(self) -> global___FeatureList: ...
    @property
    def entities(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, feast.types.Value_pb2.RepeatedValue]:
        """The entity data is specified in a columnar format
        A map of entity name -> list of values
        """

    @property
    def request_context(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, feast.types.Value_pb2.RepeatedValue]:
        """Context for OnDemand Feature Transformation
        (was moved to dedicated parameter to avoid unnecessary separation logic on serving side)
        A map of variable name -> list of values
        """

    def __init__(
        self,
        *,
        feature_service: builtins.str = ...,
        features: global___FeatureList | None = ...,
        entities: collections.abc.Mapping[builtins.str, feast.types.Value_pb2.RepeatedValue] | None = ...,
        full_feature_names: builtins.bool = ...,
        request_context: collections.abc.Mapping[builtins.str, feast.types.Value_pb2.RepeatedValue] | None = ...,
        include_metadata: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["feature_service", b"feature_service", "features", b"features", "kind", b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["entities", b"entities", "feature_service", b"feature_service", "features", b"features", "full_feature_names", b"full_feature_names", "include_metadata", b"include_metadata", "kind", b"kind", "request_context", b"request_context"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["kind", b"kind"]) -> typing.Literal["feature_service", "features"] | None: ...

global___GetOnlineFeaturesRequest = GetOnlineFeaturesRequest

@typing.final
class GetOnlineFeaturesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class FeatureVector(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VALUES_FIELD_NUMBER: builtins.int
        STATUSES_FIELD_NUMBER: builtins.int
        EVENT_TIMESTAMPS_FIELD_NUMBER: builtins.int
        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.types.Value_pb2.Value]: ...
        @property
        def statuses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___FieldStatus.ValueType]: ...
        @property
        def event_timestamps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.timestamp_pb2.Timestamp]: ...
        def __init__(
            self,
            *,
            values: collections.abc.Iterable[feast.types.Value_pb2.Value] | None = ...,
            statuses: collections.abc.Iterable[global___FieldStatus.ValueType] | None = ...,
            event_timestamps: collections.abc.Iterable[google.protobuf.timestamp_pb2.Timestamp] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["event_timestamps", b"event_timestamps", "statuses", b"statuses", "values", b"values"]) -> None: ...

    METADATA_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    status: builtins.bool
    @property
    def metadata(self) -> global___GetOnlineFeaturesResponseMetadata: ...
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GetOnlineFeaturesResponse.FeatureVector]:
        """Length of "results" array should match length of requested features.
        We also preserve the same order of features here as in metadata.feature_names
        """

    def __init__(
        self,
        *,
        metadata: global___GetOnlineFeaturesResponseMetadata | None = ...,
        results: collections.abc.Iterable[global___GetOnlineFeaturesResponse.FeatureVector] | None = ...,
        status: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata", "results", b"results", "status", b"status"]) -> None: ...

global___GetOnlineFeaturesResponse = GetOnlineFeaturesResponse

@typing.final
class GetOnlineFeaturesResponseMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FEATURE_NAMES_FIELD_NUMBER: builtins.int
    @property
    def feature_names(self) -> global___FeatureList: ...
    def __init__(
        self,
        *,
        feature_names: global___FeatureList | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["feature_names", b"feature_names"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["feature_names", b"feature_names"]) -> None: ...

global___GetOnlineFeaturesResponseMetadata = GetOnlineFeaturesResponseMetadata

@typing.final
class RepeatedFieldStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___FieldStatus.ValueType]: ...
    def __init__(
        self,
        *,
        status: collections.abc.Iterable[global___FieldStatus.ValueType] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["status", b"status"]) -> None: ...

global___RepeatedFieldStatus = RepeatedFieldStatus

@typing.final
class SortKeyFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class RangeQuery(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        RANGE_START_FIELD_NUMBER: builtins.int
        RANGE_END_FIELD_NUMBER: builtins.int
        START_INCLUSIVE_FIELD_NUMBER: builtins.int
        END_INCLUSIVE_FIELD_NUMBER: builtins.int
        start_inclusive: builtins.bool
        """Whether the start of the range is inclusive"""
        end_inclusive: builtins.bool
        """Whether the end of the range is inclusive"""
        @property
        def range_start(self) -> feast.types.Value_pb2.Value:
            """Start of the range that the sort key will be bounded by for the query"""

        @property
        def range_end(self) -> feast.types.Value_pb2.Value:
            """End of the range that the sort key will be bounded by for the query"""

        def __init__(
            self,
            *,
            range_start: feast.types.Value_pb2.Value | None = ...,
            range_end: feast.types.Value_pb2.Value | None = ...,
            start_inclusive: builtins.bool = ...,
            end_inclusive: builtins.bool = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["range_end", b"range_end", "range_start", b"range_start"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["end_inclusive", b"end_inclusive", "range_end", b"range_end", "range_start", b"range_start", "start_inclusive", b"start_inclusive"]) -> None: ...

    SORT_KEY_NAME_FIELD_NUMBER: builtins.int
    RANGE_FIELD_NUMBER: builtins.int
    EQUALS_FIELD_NUMBER: builtins.int
    sort_key_name: builtins.str
    """Name of the sort key to filter on"""
    @property
    def range(self) -> global___SortKeyFilter.RangeQuery: ...
    @property
    def equals(self) -> feast.types.Value_pb2.Value: ...
    def __init__(
        self,
        *,
        sort_key_name: builtins.str = ...,
        range: global___SortKeyFilter.RangeQuery | None = ...,
        equals: feast.types.Value_pb2.Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["equals", b"equals", "query", b"query", "range", b"range"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["equals", b"equals", "query", b"query", "range", b"range", "sort_key_name", b"sort_key_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["query", b"query"]) -> typing.Literal["range", "equals"] | None: ...

global___SortKeyFilter = SortKeyFilter

@typing.final
class GetOnlineFeaturesRangeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class EntitiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> feast.types.Value_pb2.RepeatedValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: feast.types.Value_pb2.RepeatedValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class RequestContextEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> feast.types.Value_pb2.RepeatedValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: feast.types.Value_pb2.RepeatedValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    FEATURE_SERVICE_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    ENTITIES_FIELD_NUMBER: builtins.int
    FULL_FEATURE_NAMES_FIELD_NUMBER: builtins.int
    SORT_KEY_FILTERS_FIELD_NUMBER: builtins.int
    REVERSE_SORT_ORDER_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    REQUEST_CONTEXT_FIELD_NUMBER: builtins.int
    INCLUDE_METADATA_FIELD_NUMBER: builtins.int
    feature_service: builtins.str
    full_feature_names: builtins.bool
    reverse_sort_order: builtins.bool
    """Whether to sort the results in the reverse order of the default"""
    limit: builtins.int
    include_metadata: builtins.bool
    """Whether to include the timestamp and status metadata in the response"""
    @property
    def features(self) -> global___FeatureList: ...
    @property
    def entities(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, feast.types.Value_pb2.RepeatedValue]:
        """The entity data is specified in a columnar format
        A map of entity name -> list of values
        """

    @property
    def sort_key_filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SortKeyFilter]: ...
    @property
    def request_context(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, feast.types.Value_pb2.RepeatedValue]:
        """Context for OnDemand Feature Transformation
        A map of variable name -> list of values
        """

    def __init__(
        self,
        *,
        feature_service: builtins.str = ...,
        features: global___FeatureList | None = ...,
        entities: collections.abc.Mapping[builtins.str, feast.types.Value_pb2.RepeatedValue] | None = ...,
        full_feature_names: builtins.bool = ...,
        sort_key_filters: collections.abc.Iterable[global___SortKeyFilter] | None = ...,
        reverse_sort_order: builtins.bool = ...,
        limit: builtins.int = ...,
        request_context: collections.abc.Mapping[builtins.str, feast.types.Value_pb2.RepeatedValue] | None = ...,
        include_metadata: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["feature_service", b"feature_service", "features", b"features", "kind", b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["entities", b"entities", "feature_service", b"feature_service", "features", b"features", "full_feature_names", b"full_feature_names", "include_metadata", b"include_metadata", "kind", b"kind", "limit", b"limit", "request_context", b"request_context", "reverse_sort_order", b"reverse_sort_order", "sort_key_filters", b"sort_key_filters"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["kind", b"kind"]) -> typing.Literal["feature_service", "features"] | None: ...

global___GetOnlineFeaturesRangeRequest = GetOnlineFeaturesRangeRequest

@typing.final
class GetOnlineFeaturesRangeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class EntitiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> feast.types.Value_pb2.RepeatedValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: feast.types.Value_pb2.RepeatedValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class RangeFeatureVector(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VALUES_FIELD_NUMBER: builtins.int
        STATUSES_FIELD_NUMBER: builtins.int
        EVENT_TIMESTAMPS_FIELD_NUMBER: builtins.int
        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.types.Value_pb2.RepeatedValue]:
            """Each values entry contains multiple values for a feature"""

        @property
        def statuses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RepeatedFieldStatus]: ...
        @property
        def event_timestamps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.types.Value_pb2.RepeatedValue]: ...
        def __init__(
            self,
            *,
            values: collections.abc.Iterable[feast.types.Value_pb2.RepeatedValue] | None = ...,
            statuses: collections.abc.Iterable[global___RepeatedFieldStatus] | None = ...,
            event_timestamps: collections.abc.Iterable[feast.types.Value_pb2.RepeatedValue] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["event_timestamps", b"event_timestamps", "statuses", b"statuses", "values", b"values"]) -> None: ...

    METADATA_FIELD_NUMBER: builtins.int
    ENTITIES_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___GetOnlineFeaturesResponseMetadata: ...
    @property
    def entities(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, feast.types.Value_pb2.RepeatedValue]:
        """Entities used to retrieve the features."""

    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GetOnlineFeaturesRangeResponse.RangeFeatureVector]:
        """Length of "results" array should match length of requested features.
        We also preserve the same order of features here as in metadata.feature_names
        """

    def __init__(
        self,
        *,
        metadata: global___GetOnlineFeaturesResponseMetadata | None = ...,
        entities: collections.abc.Mapping[builtins.str, feast.types.Value_pb2.RepeatedValue] | None = ...,
        results: collections.abc.Iterable[global___GetOnlineFeaturesRangeResponse.RangeFeatureVector] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["entities", b"entities", "metadata", b"metadata", "results", b"results"]) -> None: ...

global___GetOnlineFeaturesRangeResponse = GetOnlineFeaturesRangeResponse
