"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Copyright 2020 The Feast Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import collections.abc
import feast.core.DataSource_pb2
import feast.core.Entity_pb2
import feast.core.FeatureView_pb2
import feast.core.Feature_pb2
import feast.types.Value_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class SortedFeatureView(google.protobuf.message.Message):
    """Represents a SortedFeatureView, used for range queries on features"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPEC_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int
    @property
    def spec(self) -> global___SortedFeatureViewSpec:
        """User-specified specifications of the sorted feature view."""
    @property
    def meta(self) -> feast.core.FeatureView_pb2.FeatureViewMeta:
        """System-populated metadata for this feature view."""
    def __init__(
        self,
        *,
        spec: global___SortedFeatureViewSpec | None = ...,
        meta: feast.core.FeatureView_pb2.FeatureViewMeta | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["meta", b"meta", "spec", b"spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["meta", b"meta", "spec", b"spec"]) -> None: ...

global___SortedFeatureView = SortedFeatureView

class SortedFeatureViewSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ENTITIES_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    BATCH_SOURCE_FIELD_NUMBER: builtins.int
    ONLINE_FIELD_NUMBER: builtins.int
    STREAM_SOURCE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    OWNER_FIELD_NUMBER: builtins.int
    ENTITY_COLUMNS_FIELD_NUMBER: builtins.int
    SORT_KEYS_FIELD_NUMBER: builtins.int
    USE_WRITE_TIME_FOR_TTL_FIELD_NUMBER: builtins.int
    ORIGINAL_ENTITIES_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Name of the feature view. Must be unique. Not updated."""
    project: builtins.str
    """Name of Feast project that this feature view belongs to."""
    @property
    def entities(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of names of entities associated with this feature view."""
    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.Feature_pb2.FeatureSpecV2]:
        """List of specifications for each feature defined as part of this feature view."""
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """User defined metadata"""
    @property
    def ttl(self) -> google.protobuf.duration_pb2.Duration:
        """Features in this feature view can only be retrieved from online serving
        younger than ttl. Ttl is measured as the duration of time between
        the feature's event timestamp and when the feature is retrieved
        Feature values outside ttl will be returned as unset values and indicated to end user
        """
    @property
    def batch_source(self) -> feast.core.DataSource_pb2.DataSource:
        """Batch/Offline DataSource where this view can retrieve offline feature data."""
    online: builtins.bool
    """Whether these features should be served online or not"""
    @property
    def stream_source(self) -> feast.core.DataSource_pb2.DataSource:
        """Streaming DataSource from where this view can consume "online" feature data."""
    description: builtins.str
    """Description of the feature view."""
    owner: builtins.str
    """Owner of the feature view."""
    @property
    def entity_columns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.Feature_pb2.FeatureSpecV2]:
        """List of specifications for each entity defined as part of this feature view."""
    @property
    def sort_keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SortKey]:
        """List of sort keys for this feature view."""
    use_write_time_for_ttl: builtins.bool
    """Whether to use the write time or event time for TTL calculations."""
    @property
    def original_entities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.Entity_pb2.Entity]:
        """User-specified specifications of this entity.
        Adding higher index to avoid conflicts in future 
        if Feast adds more fields
        """
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        project: builtins.str = ...,
        entities: collections.abc.Iterable[builtins.str] | None = ...,
        features: collections.abc.Iterable[feast.core.Feature_pb2.FeatureSpecV2] | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        ttl: google.protobuf.duration_pb2.Duration | None = ...,
        batch_source: feast.core.DataSource_pb2.DataSource | None = ...,
        online: builtins.bool = ...,
        stream_source: feast.core.DataSource_pb2.DataSource | None = ...,
        description: builtins.str = ...,
        owner: builtins.str = ...,
        entity_columns: collections.abc.Iterable[feast.core.Feature_pb2.FeatureSpecV2] | None = ...,
        sort_keys: collections.abc.Iterable[global___SortKey] | None = ...,
        use_write_time_for_ttl: builtins.bool = ...,
        original_entities: collections.abc.Iterable[feast.core.Entity_pb2.Entity] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["batch_source", b"batch_source", "stream_source", b"stream_source", "ttl", b"ttl"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_source", b"batch_source", "description", b"description", "entities", b"entities", "entity_columns", b"entity_columns", "features", b"features", "name", b"name", "online", b"online", "original_entities", b"original_entities", "owner", b"owner", "project", b"project", "sort_keys", b"sort_keys", "stream_source", b"stream_source", "tags", b"tags", "ttl", b"ttl", "use_write_time_for_ttl", b"use_write_time_for_ttl"]) -> None: ...

global___SortedFeatureViewSpec = SortedFeatureViewSpec

class SortKey(google.protobuf.message.Message):
    """Defines the sorting criteria for range-based feature queries."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    VALUE_TYPE_FIELD_NUMBER: builtins.int
    DEFAULT_SORT_ORDER_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Name of the feature used for sorting."""
    value_type: feast.types.Value_pb2.ValueType.Enum.ValueType
    """The value type of the sorting key (e.g., INT64, FLOAT, STRING)."""
    default_sort_order: global___SortOrder.Enum.ValueType
    """The default sorting order for this key."""
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Tags for user defined metadata on a feature"""
    description: builtins.str
    """Description of the feature."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        value_type: feast.types.Value_pb2.ValueType.Enum.ValueType = ...,
        default_sort_order: global___SortOrder.Enum.ValueType = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        description: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["default_sort_order", b"default_sort_order", "description", b"description", "name", b"name", "tags", b"tags", "value_type", b"value_type"]) -> None: ...

global___SortKey = SortKey

class SortOrder(google.protobuf.message.Message):
    """Specifies the possible sorting orders for a feature view."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Enum:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _EnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SortOrder._Enum.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        INVALID: SortOrder._Enum.ValueType  # 0
        """Invalid sorting order (default value)."""
        ASC: SortOrder._Enum.ValueType  # 1
        """Ascending sorting order."""
        DESC: SortOrder._Enum.ValueType  # 2
        """Descending sorting order."""

    class Enum(_Enum, metaclass=_EnumEnumTypeWrapper): ...
    INVALID: SortOrder.Enum.ValueType  # 0
    """Invalid sorting order (default value)."""
    ASC: SortOrder.Enum.ValueType  # 1
    """Ascending sorting order."""
    DESC: SortOrder.Enum.ValueType  # 2
    """Descending sorting order."""

    def __init__(
        self,
    ) -> None: ...

global___SortOrder = SortOrder

class SortedFeatureViewList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SORTED_FEATURE_VIEWS_FIELD_NUMBER: builtins.int
    @property
    def sorted_feature_views(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SortedFeatureView]: ...
    def __init__(
        self,
        *,
        sorted_feature_views: collections.abc.Iterable[global___SortedFeatureView] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sorted_feature_views", b"sorted_feature_views"]) -> None: ...

global___SortedFeatureViewList = SortedFeatureViewList
