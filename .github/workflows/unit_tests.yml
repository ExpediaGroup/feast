name: unit-tests

on: [pull_request]
jobs:
  unit-test-python:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11"]
        os: [ ubuntu-latest, macos-13 ]
        exclude:
          - os: macos-13
            python-version: "3.9"
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Get uv cache dir
        id: uv-cache
        run: |
          echo "::set-output name=dir::$(uv cache dir)"
      - name: uv cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.uv-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-uv-${{ hashFiles(format('**/py{0}-ci-requirements.txt', env.PYTHON)) }}
      - name: Install dependencies
        run: make install-python-ci-dependencies-uv
      - name: Compile Go along with Extensions
        if: matrix.os == 'ubuntu-latest'
        run: |
          make install-go-proto-dependencies 
          make install-go-ci-dependencies
          COMPILE_GO=true python setup.py develop
          CGO_LDFLAGS_ALLOW=".*" COMPILE_GO=True python setup.py build_ext --inplace
      - name: Test EG tests
        if: matrix.os == 'ubuntu-latest'
        run: python -m pytest -n 1 --color=yes sdk/python/tests/expediagroup/
      - name: Test EG tests for Mac
        if: matrix.os != 'ubuntu-latest'
        run: python -m pytest -n 1 --color=yes sdk/python/tests/expediagroup/ --ignore=sdk/python/tests/expediagroup/test_eg_milvus_online_store.py
      - name: Test Python
        if: matrix.os == 'ubuntu-latest'
        run: make test-python-unit
      - name: Test Python for Mac
        if: matrix.os != 'ubuntu-latest'
        run: python -m pytest -n 8 --color=yes sdk/python/tests --ignore=sdk/python/tests/expediagroup

  unit-test-go:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11"]
        os: [ ubuntu-latest ]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        id: setup-go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.5
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Upgrade pip version
        run: |
          pip install --upgrade "pip>=22.1,<23"
      - name: Upgrade setuptools and wheel
        run: pip install --upgrade setuptools wheel
      - name: Test
        run: make test-go

  unit-test-ui:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '17.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install yarn dependencies
        working-directory: ./ui
        run: yarn install
      - name: Build yarn rollup
        working-directory: ./ui
        run: yarn build:lib
      - name: Run yarn tests
        working-directory: ./ui
        run: yarn test --watchAll=false

  unit-test-java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          java-package: jdk
          architecture: x64
          distribution: 'temurin'
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-it-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-it-maven-
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-ut-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-ut-maven-
      - name: Test java
        run: make test-java-with-coverage
      - uses: actions/upload-artifact@v4
        with:
          name: java-coverage-report
          path: ${{ github.workspace }}/docs/coverage/java/target/site/jacoco-aggregate/